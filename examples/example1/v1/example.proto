syntax = "proto3";

package examples.example1.v1;

import "phtml/v1/options.proto";

// request for a single user
message ShowOneUserRequest {
  // user_id of the user to be shown, taken from the url parameters.
  string user_id = 1 [(phtml.v1.param).source = SOURCE_PATH];
  // show_address, taken from the query parameters.
  bool show_address = 2 [(phtml.v1.param).source = SOURCE_QUERY];
  // nr_of_addrs from the form-encoded body.
  int64 nr_of_addrs = 3 [(phtml.v1.param).source = SOURCE_FORM];
  // some other field, without a source
  bytes some_data = 4;
}

// response from a single user.
message ShowOneUserResponse {
  option (phtml.v1.templ).component = "ShowOneUser";

  // first name
  string first_name = 1;
  // last name
  string last_name = 2;
}

// Request to show user address
message ShowUserAddressRequest {
  // id of the user
  string user_id = 1 [(phtml.v1.param).source = SOURCE_PATH];
  // id of the address
  string addr_id = 2 [(phtml.v1.param).source = SOURCE_PATH];
}

// Request to show user response
message ShowUserAddressResponse {
  option (phtml.v1.templ).component = "ShowUserAddress";
}

// MovrService handles request for a fiction ride-sharing service. Taken from:
// https://www.cockroachlabs.com/docs/stable/movr
service MovrService {
  // Show one user renders a page for a single user
  rpc ShowOneUser(ShowOneUserRequest) returns (ShowOneUserResponse) {
    option (phtml.v1.route).pattern = "/user/{user_id}";
  }

  // Show one user renders a page for a single user
  rpc ShowUserAddress(ShowUserAddressRequest) returns (ShowUserAddressResponse) {
    option (phtml.v1.route).pattern = "/user/{user_id}/address/{addr_id}";
  }
}

// Request to show user address
message ShowOneAddressRequest {
  // addr id
  string addr_id = 1 [(phtml.v1.param).source = SOURCE_PATH];
}

// Request to show user response
message ShowOneAddressResponse {
  option (phtml.v1.templ).component_package = "github.com/crewlinker/protohtml-go/examples/example1/view";
  option (phtml.v1.templ).component = "ShowOneAddress";
}

// AnotherServices handles provides another service
service AnotherService {
  // Show one user renders a page for a single user
  rpc ShowOneAddress(ShowOneAddressRequest) returns (ShowOneAddressResponse) {
    option (phtml.v1.route).pattern = "/addr/{addr_id}";
  }
}
